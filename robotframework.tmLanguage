<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>
	Robot Framework syntax highlighting for txt format.	
	</string>
	<key>fileTypes</key>
	<array>
		<string>txt</string>
	</array>
	<key>name</key>
	<string>RobotFramework</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>(\$\{EMPTY\})|\$\{SPACE\}|\$\{CURDIR\}|\$\{EXECDIR\}|\$\{TEMPDIR\}|\$\{\/\}|\$\{\:\}|\$\{\\n\}</string>
			<key>name</key>
			<string>constant.language.robot</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\$\{.*?\})|(@\{.*?\})</string>
			<key>name</key>
			<string>variable.language.robot</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(Call Method)|(Catenate)|(Comment)|(Convert To Binary)|(Convert To Boolean)|(Convert To Hex)|(Convert To Integer)|(Convert To Number)|(Convert To Octal)|(Convert To String)|(Create List)|(Evaluate)|(Exit For Loop)|(Fail)|(Fatal Error)|(Get Count)|(Get Length)|(Get Library Instance)|(Get Time)|(Get Variable Value)|(Get Variables)|(Import Library)|(Import Resource)|(Import Variables)|(Keyword Should Exist)|(Length Should Be)|(Log)|(Log Many)|(Log Variables)|(No Operation)|(Regexp Escape)|(Remove Tags)|(Repeat Keyword)|(Replace Variables)|(Run Keyword)|(Run Keyword And Continue On Failure)|(Run Keyword And Expect Error)|(Run Keyword And Ignore Error)|(Run Keyword If)|(Run Keyword If All Critical Tests Passed)|(Run Keyword If All Tests Passed)|(Run Keyword If Any Critical Tests Failed)|(Run Keyword If Any Tests Failed)|(Run Keyword If Test Failed)|(Run Keyword If Test Passed)|(Run Keyword If Timeout Occurred)|(Run Keyword Unless)|(Run Keywords)|(Set Global Variable)|(Set Library Search Order)|(Set Log Level)|(Set Suite Documentation)|(Set Suite Metadata)|(Set Suite Variable)|(Set Tags)|(Set Test Documentation)|(Set Test Message)|(Set Test Variable)|(Set Variable)|(Set Variable If)|(Should Be Empty)|(Should Be Equal)|(Should Be Equal As Integers)|(Should Be Equal As Numbers)|(Should Be Equal As Strings)|(Should Be True)|(Should Contain)|(Should Contain X Times)|(Should End With)|(Should Match)|(Should Match Regexp)|(Should Not Be Empty)|(Should Not Be Equal)|(Should Not Be Equal As Integers)|(Should Not Be Equal As Numbers)|(Should Not Be Equal As Strings)|(Should Not Be True)|(Should Not Contain)|(Should Not End With)|(Should Not Match)|(Should Not Match Regexp)|(Should Not Start With)|(Should Start With)|(Sleep)|(Variable Should Exist)|(Variable Should Not Exist)|(Wait Until Keyword Succeeds)|(Fetch From Left)|(Fetch From Right)|(Generate Random String)|(Get Line)|(Get Line Count)|(Get Lines Containing String)|(Get Lines Matching Pattern)|(Get Lines Matching Regexp)|(Get Substring)|(Replace String)|(Replace String Using Regexp)|(Should Be Lowercase)|(Should Be String)|(Should Be Titlecase)|(Should Be Uppercase)|(Should Not Be String)|(Split String)|(Split String From Right)|(Split String To Characters)|(Split To Lines)|(Append To List)|(Combine Lists)|(Convert To List)|(Copy Dictionary)|(Copy List)|(Count Values In List)|(Create Dictionary)|(Dictionaries Should Be Equal)|(Dictionary Should Contain Key)|(Dictionary Should Contain Sub Dictionary)|(Dictionary Should Contain Value)|(Dictionary Should Not Contain Key)|(Dictionary Should Not Contain Value)|(Get Dictionary Items)|(Get Dictionary Keys)|(Get Dictionary Values)|(Get From Dictionary)|(Get From List)|(Get Index From List)|(Get Slice From List)|(Insert Into List)|(Keep In Dictionary)|(List Should Contain Sub List)|(List Should Contain Value)|(List Should Not Contain Duplicates)|(List Should Not Contain Value)|(Lists Should Be Equal)|(Log Dictionary)|(Log List)|(Remove Duplicates)|(Remove From Dictionary)|(Remove From List)|(Remove Values From List)|(Reverse List)|(Set List Value)|(Set To Dictionary)|(Sort List)|(Append To File)|(Copy Directory)|(Copy File)|(Count Directories In Directory)|(Count Files In Directory)|(Count Items In Directory)|(Create Directory)|(Create File)|(Directory Should Be Empty)|(Directory Should Exist)|(Directory Should Not Be Empty)|(Directory Should Not Exist)|(Empty Directory)|(Environment Variable Should Be Set)|(Environment Variable Should Not Be Set)|(File Should Be Empty)|(File Should Exist)|(File Should Not Be Empty)|(File Should Not Exist)|(Get Binary File)|(Get Environment Variable)|(Get Environment Variables)|(Get File)|(Get File Size)|(Get Modified Time)|(Grep File)|(Join Path)|(Join Paths)|(List Directories In Directory)|(List Directory)|(List Files In Directory)|(Log Environment Variables)|(Log File)|(Move Directory)|(Move File)|(Normalize Path)|(Read Process Output)|(Remove Directory)|(Remove Environment Variable)|(Remove File)|(Remove Files)|(Run)|(Run And Return Rc)|(Run And Return Rc And Output)|(Set Environment Variable)|(Set Modified Time)|(Should Exist)|(Should Not Exist)|(Split Extension)|(Split Path)|(Start Process)|(Stop All Processes)|(Stop Process)|(Switch Process)|(Touch)|(Wait Until Created)|(Wait Until Removed)|(Alert Should Be Present)|(Assign Id To Element)|(Capture Page Screenshot)|(Checkbox Should Be Selected)|(Checkbox Should Not Be Selected)|(Choose Cancel On Next Confirmation)|(Choose File)|(Choose Ok On Next Confirmation)|(Click Button)|(Click Element)|(Click Image)|(Click Link)|(Close All Browsers)|(Close Browser)|(Close Window)|(Confirm Action)|(Current Frame Contains)|(Delete All Cookies)|(Delete Cookie)|(Double Click Element)|(Drag And Drop)|(Drag And Drop By Offset)|(Element Should Be Disabled)|(Element Should Be Enabled)|(Element Should Be Visible)|(Element Should Contain)|(Element Should Not Be Visible)|(Element Text Should Be)|(Execute Async Javascript)|(Execute Javascript)|(Focus)|(Frame Should Contain)|(Get Alert Message)|(Get All Links)|(Get Cookie Value)|(Get Cookies)|(Get Element Attribute)|(Get Horizontal Position)|(Get List Items)|(Get Location)|(Get Matching Xpath Count)|(Get Selected List Label)|(Get Selected List Labels)|(Get Selected List Value)|(Get Selected List Values)|(Get Selenium Implicit Wait)|(Get Selenium Speed)|(Get Selenium Timeout)|(Get Source)|(Get Table Cell)|(Get Text)|(Get Title)|(Get Value)|(Get Vertical Position)|(Get Window Identifiers)|(Get Window Names)|(Get Window Titles)|(Go Back)|(Go To)|(Input Password)|(Input Text)|(List Selection Should Be)|(List Should Have No Selections)|(Location Should Be)|(Location Should Contain)|(Log Location)|(Log Source)|(Log Title)|(Maximize Browser Window)|(Mouse Down)|(Mouse Down On Image)|(Mouse Down On Link)|(Mouse Out)|(Mouse Over)|(Mouse Up)|(Open Browser)|(Open Context Menu)|(Page Should Contain)|(Page Should Contain Button)|(Page Should Contain Checkbox)|(Page Should Contain Element)|(Page Should Contain Image)|(Page Should Contain Link)|(Page Should Contain List)|(Page Should Contain Radio Button)|(Page Should Contain Textfield)|(Page Should Not Contain)|(Page Should Not Contain Button)|(Page Should Not Contain Checkbox)|(Page Should Not Contain Element)|(Page Should Not Contain Image)|(Page Should Not Contain Link)|(Page Should Not Contain List)|(Page Should Not Contain Radio Button)|(Page Should Not Contain Textfield)|(Press Key)|(Radio Button Should Be Set To)|(Radio Button Should Not Be Selected)|(Register Keyword To Run On Failure)|(Reload Page)|(Select All From List)|(Select Checkbox)|(Select Frame)|(Select From List)|(Select From List By Index)|(Select From List By Label)|(Select From List By Value)|(Select Radio Button)|(Select Window)|(Set Browser Implicit Wait)|(Set Selenium Implicit Wait)|(Set Selenium Speed)|(Set Selenium Timeout)|(Simulate)|(Submit Form)|(Switch Browser)|(Table Cell Should Contain)|(Table Column Should Contain)|(Table Footer Should Contain)|(Table Header Should Contain)|(Table Row Should Contain)|(Table Should Contain)|(Textfield Should Contain)|(Textfield Value Should Be)|(Title Should Be)|(Unselect Checkbox)|(Unselect Frame)|(Unselect From List)|(Unselect From List By Index)|(Unselect From List By Label)|(Unselect From List By Value)|(Wait For Condition)|(Wait Until Page Contains)|(Wait Until Page Contains Element)|(Xpath Should Match X Times)|(Check If Exists In Database)|(Check If Not Exists In Database)|(Connect To Database)|(Connect To Database Using Custom Params)|(Delete All Rows From Table)|(Description)|(Disconnect From Database)|(Execute Sql Script)|(Query)|(Row Count)|(Row Count Is 0)|(Row Count Is Equal To X)|(Row Count Is Greater Than X)|(Row Count Is Less Than X)|(Table Must Exist)</string>
			<key>name</key>
			<string>entity.name.function.robot</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(^\*\*\*.*?\*\*\*)|((?&lt;=^\|)\s+\*\*\*.*?\*\*\*)</string>
			<key>name</key>
			<string>meta.diff.header.robot</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[.*?\]</string>
			<key>name</key>
			<string>variable.parameter.robot</string>
		</dict>

		<dict>
			<key>match</key>
			<string>(BuiltIn)|(String)|(Collections)|(OperatingSystem)</string>
			<key>name</key>
			<string>support.class.robot</string>
		</dict>





		<dict>
			<key>begin</key>
			<string>(?&lt;!\\)#</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.robot</string>
		</dict>



		<dict>
			<key>begin</key>
			<string>(^[^ \t\*\n\|]+)|((?&lt;=^\|)\s+[^ \t\*\n\|]+)</string>
			<key>end</key>
			<string>\s{2}|\t|$|\s+(?=\|)</string>
			<key>name</key>
			<string>keyword.control.robot</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>text.robotframework</string>
	<key>uuid</key>
	<string>E54BFAB1-E5A0-4524-9FFC-FC08B20F21E4</string>
</dict>
</plist>
